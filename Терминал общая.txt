Home Work v1.0 & 2.0    Linux terminal commands
https://t.me/ArtAnd91 (@ArtAnd91)		
Ubuntu v.2004.4.4.0


Команды:

1) Посмотреть где я:
pwd

2) Создать папку:
mkdir HW1

3) Зайти в папку:
cd HW1

4) Создать 3 папки:
mkdir HW2 HW3 HW4

5) Зайти в любую папку:
cd HW2

6) Создать 5 файлов (3 txt, 2 json):
touch qa1.txt qa2.txt qa3.txt Project1.json Project2.json

7) Создать 3 папки:
mkdir -p HW5/HW6/HW7

8. Вывести список содержимого папки:
ls -la (либо ls, ls -l, ls -a)

9) + Открыть любой txt файл:
vim qa1.txt (открывает редактор конкретного файла)

10) + написать туда что-нибудь, любой текст:
нажимаем i включается режим редактирования (insert)
dndndm
12344
32167
kfkfk

11) + сохранить и выйти:
esc для выхода из режима редактирования
нажимаем :wq + enter выйти сохранив изменения

12) Выйти из папки на уровень выше:
cd ..

13) переместить любые 2 файла, которые вы создали, в любую другую папку:
mv qa1.txt Project1.json HW5

14) скопировать любые 2 файла, которые вы создали, в любую другую папку.
cp qa2.txt Project2.json HW5

15) Найти файл по имени:
find qa2.txt (find. -name qa1.txt)

16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает:
Может быть использована как:
поиск по слову в файле командой grep hello qa2.txt, вывод покажет запрошенное слово;
сколько раз встречается определенное слово командой grep -c hello qa2.txt, вывод покажет число;
поиск слова не чувствительным к регистру командой grep -i hello qa2.txt, вывод показывает все варианты написания в искомом файле;

Для просмотра изменений в реальном времени используется комнада tail, например tail -f /home/artem/group_30_free/HW1/HW2/qa2.txt, вывод показывает изменения файла в реальном времени.
С использованием команды grep 
tail -f /home/artem/group_30_free/HW1/HW2/qa2.txt | grep wtf, вывод будет показывать в режиме реального времени заданное слово при его появлении в файле.

17) вывести несколько первых строк из текстового файла:
head -n3 /home/artem/group_30_free/HW1/HW2/qa2.txt (head -3 qa1.txt)

18) вывести несколько последних строк из текстового файла:
tail -n2 -f /home/artem/group_30_free/HW1/HW2 qa2.txt (tail -3 qa1.txt)

19) просмотреть содержимое длинного файла (команда less) изучите как она работает:
команда предназначена для просмотра больших текстовых файлов
Например less qa2.txt (less 
Добавление в команду ключа "-s" удалит множественные пустые строки (например несколько пустых абзацев подряд).
Полсе открытия файла можно осуществлять поиск по тексту нажав "/" и напечатав нужное слово. Выйти из режима можно нажав q.

20) вывести дату и время
команда date или date +"%D %T"

Задание *
1) Отправить http запрос на сервер.
http://162.55.220.72:5005/terminal-hw-request (команда curl)

Запрос:
"http://162.55.220.72:5005/get_method?name=Artem&age=31" либо http://162.55.220.72:5005/get_method?"name=Artem&age=31"

2) Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13

- создается файл script.sh (touch script.sh)

- вносятся необходимые шаги (cat >> script.sh):
cd HW1
mkdir HW2 HW3 HW4
cd HW2
touch qa1.txt qa2.txt qa3.txt Project1.json Project2.json
mkdir -p HW5/HW6/HW7
ls -la
mv qa1.txt Project1.json HW5

- командой chmod u+x script.sh файл делается исполняемым

- командой bash script.sh запускается.


21. Сделать папку dir_1:
mkdir dir_1

22. Зайти в папку dir_1:
cd dir_1

23. Создать папку inner_dir_1:
mkdir inner_dir_1

24. Посмотреть где ты находишься:
pwd

25. Находясь в папке dir_1 создать пустой текстовый файл tf_1.txt:
touch tf_1.txt

26. Находясь в папке dir_1 через команду cat создать текстовый файл tf_2.txt со следующими строками:
- the first 1
- the second 2
- the third 3:

cat > tf_2.txt
the first 1
the second 2
the third 3
^C


27. Зайти в папку inner_dir_1:
cd inner_dir_1

28. Через cat сделать текстовый файл tf_3.txt  c любыми строками:
cat > tf_3.txt
qwerty
asdfg
zxcvb
12345
^C

29. Через cat добавить в текстовый файл tf_3.txt строку “the second 2”
cat >> tf_3.txt (">>" позволяет дописывать в файл строки)

30. Через cat добавить в текстовый файл tf_3.txt строку “the sec 2”
= п.9

31. Через cat добавить в текстовый файл tf_2.txt строку “the sec 3”
cat >> ../tf_2.txt

32. Через cat добавить в текстовый файл tf_3.txt строку “the SeCoNd 2”
= п.10 и 9

33. Через cat добавить в текстовый файл tf_2.txt строку “the seConD 2”
= п.11

34. Сделать текстовый файл tf_4.txt в котором будет 15 строк. 
vim tf_4.txt (добавить 15 пустых строк), проверить командой wc -l tf_4.txt
echo -e '\n\n\n\n\n\n\n\n\n\n\n\n\n\n' > tf_4.txt


35. Сделать текстовый файл tF_5.txt в котором будет 13 строк.
vim tF_5.txt (добавить 13 пустых строк), проверить командой wc -l tF_5.txt
echo -e '\n\n\n\n\n\n\n\n\n\n\n\n' > tF_5.txt


36. Вывести список всех файлов в папке.
ls -la

37. Выйти из папки inner_dir_1
cd ..

38. Вывести содержимое файла tf_3.txt в терминал.
tail -f inner_dir_1/tf_3.txt (закрыть ^C)

39. Найти путь к файлу tf_4.txt
find -name 'tf_4.txt'
readlink -e tf_4.txt (realpath -e tf_4.txt) "-e" показывает путь до реального файла

40. Отчистить файл tf_4.txt от содержимого без удаления самого файла.
:> inner_dir_1/tf_4.txt

41. Найти путь к файлам у которых есть  “tf” в названии.
find . -name "tf*.txt"

42. Найти путь к файлам у которых есть  “tf” в названии и буквы в любом регистре.
find . -iname "tf*.txt"

43. Найти строки в файлах где есть комбинация букв “sec” в текущей папке
grep "sec" *

44. Найти строки в файлах где есть комбинация букв “sec” в любом регистре в текущей папке
grep -i "sec" *

45. Найти строки в файлах где есть только комбинация букв “sec” в текущей папке
grep -w "sec" *

46. Найти строки в файлах где есть только комбинация букв “sec” в любом регистре в текущей папке
grep -wi "sec" *

47. Найти строки в файлах где есть комбинация букв “second” в текущей папке
grep "second" 

48. Найти строки в файлах где есть комбинация букв “second” в любом регистре в текущей папке
grep -i "second" *

49. Найти строки в файлах где есть комбинация букв “second” во всех папках ниже уровнем
grep -r "second" ./*/

50. Найти только путь и название файла в строках которых есть комбинация букв “second” в текущей папке
grep -l "second" *

51. Найти все строки во всех файлах где нет комбинации “second”
grep -v "second"

52. Найти только название и путь к файлам где нет комбинации “second”
grep -vrl 'second' * | xargs find $pwd

53. Вывести в терминал 4 последних строк любого текстового файла
tail -4 tf_2.txt

54. Вывести в терминал 4 первые строки любого текстового файла.
head -4 tf_2.txt

55. Команда в одну строку. Создать папку и создать текстовый файл с содержиммым.
mkdir papka1 | echo 'hello' >> qa.txt

56. Команда в одну строку. Переместить в любую одну папку текстовые файлы у которых в содержимом есть слово “sec”
grep -rl 'sec' | xargs mv -t papka1

57. Команда в одну строку. Скопировать в любую одну папку текстовые файлы у которых в содержимом есть слово “sec”
grep -rl 'sec' | xargs cp -t papka1

58. Команда в одну строку. Найти все строки c “sec” во всех текстовых файлах, скопировать и вставить эти строки в один новый созданный текстовый файл.
grep -rh 'sec' | xargs -i echo >> qa777.txt

59. Команда в одну строку. Удалить текстовые файлы у которых в содержимом есть слово “sec”
find -type f -exec grep -q 'sec' {} \; -delete
grep -lr "sec" | xargs rm *.txt

60. Просто вывести в терминал строку “Good job!!”
echo 'Good job!!'